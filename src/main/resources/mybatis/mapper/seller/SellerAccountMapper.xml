<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.billz.xycode.dao.seller.SellerAccountMapper">
	<resultMap id="BaseResultMap" type="com.billz.xycode.model.seller.SellerAccount">
		<id property="said" column="said" jdbcType="BIGINT" />
		<result property="sellerid" column="sellerid" jdbcType="BIGINT" />
		<result property="satype" column="satype" jdbcType="INTEGER" />
		<result property="balance" column="balance" jdbcType="DOUBLE" />
		<result property="status" column="status" jdbcType="BOOLEAN" />
		<result property="createtime" column="createtime" jdbcType="TIMESTAMP" />
	</resultMap>
	<resultMap id="BaseResultMap2" type="com.billz.xycode.model.seller.SellerAccount">
		<id property="said" column="said" jdbcType="BIGINT" />
		<result property="sellerid" column="sellerid" jdbcType="BIGINT" />
		<result property="satype" column="satype" jdbcType="INTEGER" />
		<result property="catename" column="catename" jdbcType="VARCHAR" />
		<result property="balance" column="balance" jdbcType="DOUBLE" />
		<result property="status" column="status" jdbcType="BOOLEAN" />
		<result property="createtime" column="createtime" jdbcType="TIMESTAMP" />
	</resultMap>
	<resultMap id="BaseResultMap3" type="com.billz.xycode.model.seller.SellerAccount">
		<id property="said" column="said" jdbcType="BIGINT" />
		<result property="sellerid" column="sellerid" jdbcType="BIGINT" />
		<result property="satype" column="satype" jdbcType="INTEGER" />
		<result property="catename" column="catename" jdbcType="VARCHAR" />
		<result property="sellername" column="sellername" jdbcType="VARCHAR" />
		<result property="balance" column="balance" jdbcType="DOUBLE" />
		<result property="status" column="status" jdbcType="BOOLEAN" />
		<result property="createtime" column="createtime" jdbcType="TIMESTAMP" />
	</resultMap>
	<sql id="Base_Column_List">
		said,sellerid,satype,balance,status,createtime
	</sql>
	<sql id="Base_Column_List2">
		vo.said,vo.sellerid,vo.satype,vo.balance,vo.status,vo.createtime,cate.catename
	</sql>
	<sql id="Base_Column_List3">
		vo.said,vo.sellerid,vo.satype,vo.balance,vo.status,vo.createtime,cate.catename,se.sellername
	</sql>
	<sql id="Tb_table_name">tb_seller_account</sql>
	
	<select id="findPageCount" parameterType="psb" resultType="Integer">
		select count(1) from <include refid="Tb_table_name" />
		<trim prefix="WHERE" prefixOverrides="AND |OR ">
			<if test="bean.sellerid != null and bean.sellerid != '' ">
				and sellerid = #{bean.sellerid}
			</if>
			<if test="bean.satype != null and bean.satype != '' ">
				and satype = #{bean.satype}
			</if>
			<if test="bean.status != null ">
				and status = #{bean.status}
			</if>
		</trim>
	</select>
	
	<select id="findPageList" parameterType="psb" resultMap="BaseResultMap3">
		select
			<include refid="Base_Column_List3" /> 
		from <include refid="Tb_table_name" /> vo
		left join tb_seller se on se.sellerid = vo.sellerid
		left join tb_equipment_category cate on cate.cateid=vo.satype
		<trim prefix="WHERE" prefixOverrides="AND |OR ">
			<if test="bean.sellerid != null and bean.sellerid != '' ">
				and vo.sellerid = #{bean.sellerid}
			</if>
			<if test="bean.satype != null and bean.satype != '' ">
				and vo.satype = #{bean.satype}
			</if>
			<if test="bean.status != null">
				and vo.status = #{bean.status}
			</if>
		</trim>
		order by vo.said desc
		limit #{start},#{end}
	</select>
	
	<select id="findBySaid" parameterType="Long" resultMap="BaseResultMap2">
		select
			<include refid="Base_Column_List2" />
		from 
			<include refid="Tb_table_name" /> vo
		left join tb_equipment_category cate on cate.cateid=vo.satype
		where said = #{said}
	</select>
	
	<select id="findBySelleridAndSatype" parameterType="map" resultMap="BaseResultMap">
		select
			<include refid="Base_Column_List" />
		from 
			<include refid="Tb_table_name" />
		where sellerid = #{sellerid} and satype=#{satype}
		order by said desc
		limit 1
	</select>
	
	<select id="findBySellerid" parameterType="Long" resultMap="BaseResultMap2">
		select
			<include refid="Base_Column_List2" />
		from 
			<include refid="Tb_table_name" /> vo
		left join tb_equipment_category cate on cate.cateid=vo.satype
		where vo.sellerid = #{sellerid}
		order by vo.satype
	</select>
	
	<delete id="delBySaid" parameterType="Long">
		delete from <include refid="Tb_table_name" />
		where said = #{said}
	</delete>
	
	<insert id="insert" parameterType="com.billz.xycode.model.seller.SellerAccount" useGeneratedKeys="true"
		keyProperty="said">
		insert into <include refid="Tb_table_name" />
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="said != null">
				said,
			</if>
			<if test="sellerid != null">
				sellerid,
			</if>
			<if test="satype != null">
				satype,
			</if>
			<if test="balance != null">
				balance,
			</if>
			<if test="status != null">
				status,
			</if>
				createtime,
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="said != null">
				#{said},
			</if>
			<if test="sellerid != null">
				#{sellerid},
			</if>
			<if test="satype != null">
				#{satype},
			</if>
			<if test="balance != null">
				#{balance},
			</if>
			<if test="status != null">
				#{status},
			</if>
				now(),
		</trim>
	</insert>
	
	<update id="updateBySaid" parameterType="com.billz.xycode.model.seller.SellerAccount">
		update <include refid="Tb_table_name" />
		<trim suffixOverrides=",">
			<set> 
				<if test="sellerid != null ">
					sellerid = #{sellerid},
				</if>
				<if test="satype != null ">
					satype = #{satype},
				</if>
				<if test="balance != null ">
					balance = #{balance},
				</if>
				<if test="status != null ">
					status = #{status},
				</if>
			</set>
		</trim>
		where said = #{said}
	</update>
	
	<update id="updateBalanceBySaid" parameterType="map">
		update <include refid="Tb_table_name" />
		set balance = #{balance}
		where said = #{said}
	</update>
</mapper>